{"version":3,"sources":["pages/Home/index.js","pages/Generator/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","addInput","padding","display","alignItems","width","cardHeader","spacing","list","height","backgroundColor","palette","background","paper","overflow","button","margin","mt3","marginTop","mt6","input","marginLeft","flex","iconButton","intersection","a","b","filter","value","indexOf","not","Home","classes","React","useState","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","newItem","setNewItem","startGenerator","setStartGenerator","showItem","setShowItem","showItemContent","setShowItemConetent","times","setTimes","useEffect","localLeft","localStorage","getItem","rightLeft","split","interval","setInterval","Math","floor","random","length","clearInterval","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","handleToggleAll","customList","title","Card","CardHeader","className","avatar","Checkbox","onClick","indeterminate","disabled","inputProps","subheader","Divider","List","dense","component","role","map","labelId","ListItem","ListItemIcon","tabIndex","disableRipple","ListItemText","id","primary","Zoom","in","timeout","Paper","elevation","style","Typography","variant","Button","color","Grid","container","justify","item","InputBase","placeholder","onChange","event","target","divider","orientation","IconButton","type","setItem","aria-label","direction","size","concat","Generator","href","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c21c1de8.chunk.js","sourcesContent":["import React, { useEffect, useRef }  from \"react\";\nimport './Home.css';\nimport {Button, Grid, List, Card, CardHeader, ListItem, Typography, ListItemText, ListItemIcon, Checkbox, Divider, Paper, IconButton, InputBase, Zoom} from \"@material-ui/core\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // '& .MuiOutlinedInput-root': {\n        //     '& fieldset': {\n        //         borderColor: 'white',\n        //     },\n        //     '&:hover fieldset': {\n        //         borderColor: 'white',\n        //     },\n        // },\n        // 'label + &': {\n        //     color: 'white',\n        // },\n    },\n    addInput:{\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    cardHeader: {\n        padding: theme.spacing(1, 2),\n    },\n    list: {\n        width: 200,\n        height: 230,\n        backgroundColor: theme.palette.background.paper,\n        overflow: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5, 0),\n    },\n    mt3:{\n        marginTop: theme.spacing(3)\n    },\n    mt6:{\n        marginTop: theme.spacing(6)\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n}));\n\n\nconst intersection = (a, b) => {\n    return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nconst not = (a, b) => {\n    return a.filter((value) => b.indexOf(value) === -1);\n}\n\nconst union = (a, b) => {\n    return [...a, ...not(b, a)];\n}\n\nconst Home = () => {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([]);\n    const [left, setLeft] = React.useState([]);\n    const [right, setRight] = React.useState([]);\n    const leftChecked = intersection(checked, left);\n    const rightChecked = intersection(checked, right);\n    const [newItem, setNewItem] = React.useState('');\n    const [startGenerator, setStartGenerator] = React.useState(false);\n    const [showItem, setShowItem] = React.useState(false);\n    const [showItemContent, setShowItemConetent] = React.useState('');\n    const [times, setTimes] = React.useState(1);\n    const addNewItem = () => {\n        setLeft([...left, newItem]);\n        setNewItem('');\n        localStorage.setItem('left',[...left, newItem])\n    }\n\n    useEffect(()=>{\n        const localLeft = localStorage.getItem('left');\n        const rightLeft = localStorage.getItem('right');\n        if (localLeft){\n            setLeft(localLeft.split(','))\n        }\n        if (rightLeft){\n            setRight(rightLeft.split(','))\n        }\n    },[])\n\n    useEffect(()=>{\n        if (startGenerator){\n            const interval = setInterval(() => {\n                setShowItem(!showItem);\n                setShowItemConetent(right[Math.floor(Math.random() * right.length)]);\n                let tem = times+1;\n                setTimes(tem);\n            }, 150);\n\n            if (times>=36){\n                clearInterval(interval);\n                setShowItem(true);\n            }\n\n            return () => {\n                clearInterval(interval);\n            }\n        }\n    },[startGenerator,showItem])\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n    const numberOfChecked = (items) => intersection(checked, items).length;\n    const handleToggleAll = (items) => () => {\n        if (numberOfChecked(items) === items.length) {\n            setChecked(not(checked, items));\n        } else {\n            setChecked(union(checked, items));\n        }\n    };\n\n    const handleCheckedRight = () => {\n        setRight(right.concat(leftChecked));\n        setLeft(not(left, leftChecked));\n        setChecked(not(checked, leftChecked));\n        localStorage.setItem('left',not(left, leftChecked));\n        localStorage.setItem('right',right.concat(leftChecked));\n    };\n\n    const handleCheckedLeft = () => {\n        setLeft(left.concat(rightChecked));\n        setRight(not(right, rightChecked));\n        setChecked(not(checked, rightChecked));\n        localStorage.setItem('left',left.concat(rightChecked));\n        localStorage.setItem('right',not(right, rightChecked));\n    };\n\n\n    const handleStart = () => {\n        setTimes(1);\n        setStartGenerator(true);\n    }\n\n    const handleClose = () => {\n        setStartGenerator(false);\n    }\n\n    const clearList = () => {\n        setLeft(not(left, leftChecked));\n        setRight(not(right, rightChecked));\n        localStorage.setItem('left',not(left, leftChecked));\n        localStorage.setItem('right',not(right, rightChecked));\n    }\n\n    const customList = (title, items) => (\n        <Card>\n            <CardHeader\n                className={classes.cardHeader}\n                avatar={\n                    <Checkbox\n                        onClick={handleToggleAll(items)}\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\n                        indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n                        disabled={items.length === 0}\n                        inputProps={{ 'aria-label': 'all items selected' }}\n                    />\n                }\n                title={title}\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\n            />\n            <Divider />\n            <List className={classes.list} dense component=\"div\" role=\"list\">\n                {items.map((value) => {\n                    const labelId = `transfer-list-all-item-${value}-label`;\n\n                    return (\n                        <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n                            <ListItemIcon>\n                                <Checkbox\n                                    checked={checked.indexOf(value) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{ 'aria-labelledby': labelId }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={labelId} primary={value} />\n                        </ListItem>\n                    );\n                })}\n                <ListItem />\n            </List>\n        </Card>\n    );\n\n\n    return (\n        <div className=\"Home\">\n            <div className=\"Home-content\">\n                {startGenerator?(\n                    <>\n                        <Zoom in={showItem} timeout={150}>\n                            <Paper elevation={4} style={{padding:'2%'}}>\n                                <Typography variant=\"h3\" >\n                                    {showItemContent}\n                                </Typography>\n                            </Paper>\n                        </Zoom>\n                        <Button  className={classes.mt6} variant=\"contained\" color=\"primary\" onClick={handleClose}>Back</Button>\n                    </>):(\n                    <>\n                        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n                            <Grid item>\n                                <Paper component=\"form\" className={classes.addInput}>\n                                    <InputBase\n                                        className={classes.input}\n                                        placeholder=\"Add a new item\"\n                                        value={newItem}\n                                        onChange={event => setNewItem(event.target.value)}\n                                        inputProps={{ 'aria-label': 'search google maps' }}\n                                    />\n                                    {/*<IconButton  className={classes.iconButton} aria-label=\"search\">*/}\n                                    {/*    <SearchIcon />*/}\n                                    {/*</IconButton>*/}\n                                    <Divider className={classes.divider} orientation=\"vertical\" />\n                                    <IconButton type=\"submit\"  onClick={addNewItem} color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\n                                        <AddBoxIcon  />\n                                    </IconButton>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.mt3}>\n                            <Grid item>{customList('Choices', left)}</Grid>\n                            <Grid item>\n                                <Grid container direction=\"column\" alignItems=\"center\">\n                                    <Button\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        onClick={handleCheckedRight}\n                                        disabled={leftChecked.length === 0}\n                                        aria-label=\"move selected right\"\n                                        color=\"primary\"\n                                    >\n                                        &gt;\n                                    </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        onClick={handleCheckedLeft}\n                                        disabled={rightChecked.length === 0}\n                                        aria-label=\"move selected left\"\n                                        color=\"primary\"\n                                    >\n                                        &lt;\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            <Grid item>{customList('Chosen', right)}</Grid>\n                        </Grid>\n                        <Button  className={classes.mt3} variant=\"contained\" color=\"secondary\" onClick={clearList}>Clear</Button>\n                        <Button  className={classes.mt6} variant=\"contained\" color=\"primary\" disabled={right.length===0} onClick={handleStart}>Random Choose Start!</Button>\n                    </>)}\n                {/*<Button  className={classes.mt6} variant=\"contained\" color=\"primary\" href='/#/generator'>Random Choose Start!</Button>*/}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React, {useEffect, useRef} from \"react\";\nimport {Button} from \"@material-ui/core\";\n\n\nconst Generator = () => {\n    return(\n        <div className=\"Home\">\n            <div className=\"Home-content\">\n                Generator\n                <Button variant=\"contained\" color=\"primary\" href='/randomGenerator'>Go to Home</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Generator;","import {Switch, Route} from \"react-router-dom\";\nimport Home from \"./pages/Home\"\nimport Generator from \"./pages/Generator\";\nfunction App() {\n  return (\n      <main>\n          <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/generator\" component={Generator}  />\n          </Switch>\n      </main>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <Button variant=\"contained\" color=\"primary\">Go to Generator</Button>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}